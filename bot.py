import telebot
import sqlite3
from telebot import types


from config import API_TOKEN

bot = telebot.TeleBot(API_TOKEN)

"""–§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã start."""
@bot.message_handler(commands=['start'])
def start(message):
    mess = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø –±–æ—Ç-—Ç—Ä–µ–∫–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è.'
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç!")
    btn2 = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, mess, reply_markup=markup)

    """–°–æ–∑–¥–∞—ë–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –∫—É—Ä—Å–æ—Ä."""
    conn = sqlite3.connect('moodbase.sql')
    cur = conn.cursor()

    user_id = message.from_user.id
    answer = message.text

    """–°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É 'moodbase.sql' —Å –ø–æ–ª—è–º–∏ id, answer, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."""
    cur.execute('INSERT INTO users (id, answer) VALUES (?, ?)', (user_id, answer))
    conn.commit()

    cur.close()
    conn.close()

    # if cur.fetchone() is None:
    #     cur.execute(f"INSERT INTO users VALUES(?,?,?)", (message.chat.id, message.from_user.username, 0))
    #     conn.commit()
    # else:
    #     for value in cur.execute("SELECT * FROM users"):
    #         print(value) 

"""–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π."""
@bot.message_handler(content_types=['text'])
def get_user_messages(message):   
    if message.text == 'üëã –ü—Ä–∏–≤–µ—Ç!':
        bot.send_message(
            message.chat.id,
            '–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è. –Ø –ø–æ–º–æ–≥—É —Å–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–≤–æ–∏–º —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ–º)'
        )
    elif message.text == '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ':
        mess = f'{message.from_user.first_name}! –ö–∞–∫ —Ç–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è?'
        markup = types.InlineKeyboardMarkup(row_width=3)
        item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
        item2 = types.InlineKeyboardButton("–ù–æ—Ä–º–∞–ª—å–Ω–æ", callback_data='normal')
        item3 = types.InlineKeyboardButton("–ü–ª–æ—Ö–æ", callback_data='bad')
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, mess, reply_markup=markup)
    else: 
        bot.send_message(
            message.chat.id,
            '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é('
        )

"""–û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤."""
@bot.callback_query_handler(func=lambda call:True)
def callbeck_inline_mood(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–≠—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ!')
            elif call.data == 'normal':
                bot.send_message(call.message.chat.id, '–•–æ—Ä–æ—à–æ, —á—Ç–æ –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ!')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ú–Ω–µ –æ—á–µ–Ω—å –∂–∞–ª—å(')
            bot.answer_callback_query(callback_query_id=call.id, show_alert=True,
                text='–Ø –Ω–∞–ø–æ–º–Ω—é —Ç–µ–±–µ, –∫–æ–≥–¥–∞ –ø—Ä–∏–¥—ë—Ç –≤—Ä–µ–º—è –æ—Ç–º–µ—Ç–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ.')
    except Exception as error:
        print(repr(error))

"""–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ."""
if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)
